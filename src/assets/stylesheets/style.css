@charset "UTF-8";
/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
/*
Document
========
*/
/**
Use a better box model (opinionated).
*/
@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/
html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/
/**
Remove the margin in all browsers.
*/
body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
}

/*
Grouping content
================
*/
/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/
/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/
/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/
/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/
button,
select { /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/
:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/
:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/
legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Interactive
===========
*/
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}

@font-face {
  font-family: "SUIT";
  src: local("SUIT Variable"), url("/fonts/SUIT-Variable.woff2") format("woff2-variations");
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}
:root {
  font-family: "SUIT", sans-serif;
  font-size: clamp(12px, 5vmin, 20px);
  line-height: 1;
  scroll-behavior: smooth;
  --fnt-title-xl: 3.6rem;
  --fnt-title-lg: 2.4rem;
  --fnt-title-md: 1.6rem;
  --fnt-title-sm: 1.2rem;
  --fnt-title-xs: 1rem;
  --fnt-xl: 0.9rem;
  --fnt-lg: 0.8rem;
  --fnt-md: 0.7rem;
  --fnt-sm: 0.6rem;
  --fnt-xs: 0.5rem;
  --ff-sans-kr: "SUIT", sans-serif;
  --ff-sans-en: "Poppins", sans-serif;
  --ff-gothic-kr: "";
  --ff-gothic-en: "";
  --ff-serif-kr: "MaruBuri", serif;
  --ff-serif-en: "";
  --ff-cursive: "";
  --rad-full: 25rem;
  --rad-xl: 0.8rem;
  --rad-lg: 0.4rem;
  --rad-sm: 0.2rem;
  --rad-xs: 0.1rem;
  --shd-0: ;
  --shd-20: ;
  --shd-40: ;
  --shd-60: ;
  --shd-80: ;
  --shd-100: 0 0.8rem 1.2rem -0.6rem rgb(var(--clr-text) / 0.25);
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font: inherit;
  -webkit-tap-highlight-color: transparent;
}

body {
  min-height: 100vh;
  background-color: rgb(var(--clr-background));
  font-family: var(--ff-sans-kr);
  color: rgb(var(--clr-text)/var(--opaq, 1));
  font-size: var(--fnt-md);
  word-break: keep-all;
  transition: background-color 0.25s;
  overflow: overlay;
}
body.prevent-scroll {
  overflow: hidden;
}

::-moz-selection {
  background-color: rgb(var(--clr-if-100)/0.9);
  color: rgb(var(--clr-text-on-tint));
}

::selection {
  background-color: rgb(var(--clr-if-100)/0.9);
  color: rgb(var(--clr-text-on-tint));
}

::-webkit-scrollbar {
  width: 5px;
  height: 5px;
  border-radius: 2px;
}

::-webkit-scrollbar-track-piece {
  border-radius: 2px;
  background-color: rgb(var(--clr-min)/0.3);
}

::-webkit-scrollbar-thumb {
  border-radius: 2px;
  background-color: rgb(var(--clr-max)/0.25);
}

hr {
  height: 1px;
  border: 0;
  background-color: rgb(var(--clr-text)/0.15);
}

h2 {
  font-size: var(--fnt-title-xl);
}

h3 {
  font-size: var(--fnt-title-lg);
}

h4 {
  font-size: var(--fnt-title-md);
}

h5 {
  font-size: var(--fnt-title-sm);
}

h6 {
  font-size: var(--fnt-title-xs);
}

img,
picture,
i,
svg,
video {
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
  shape-margin: 1rem;
}

ul,
ol,
li {
  list-style: none;
}

a, a:visited {
  outline: none;
  color: inherit;
  text-decoration: none;
}

/* _default.scss */
/* _variables.scss */
/* _variables.scss */
/* _functions.scss */
/* _functions.scss */
/* _keyframes.scss */
@keyframes rotate-conic {
  from {
    --conic-range: 0deg;
  }
  to {
    --conic-range: 360deg;
  }
}
@keyframes blink {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes burger-toggle {
  40% {
    height: 0.1rem;
    inset-inline-start: var(--burger-self-start);
    inset-inline-end: var(--burger-self-end);
  }
  45% {
    inset-inline-start: 0;
    inset-inline-end: 0;
  }
  66% {
    inset-inline-start: 0;
    inset-inline-end: 0;
    rotate: 0;
  }
  75% {
    rotate: var(--burger-self-rotate) 0 0;
  }
  100% {
    inset-inline-start: 0;
    inset-inline-end: 0;
    height: 0.8rem;
    rotate: var(--burger-self-rotate) 0 0;
  }
}
/* _keyframes.scss */
/* _utils.scss */
@property --conic-range {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --gradient-range {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
/* _utils.scss */
/* _light.scss */
@media (prefers-color-scheme: light) {
  :root {
    --clr-min: 255 255 255;
    --clr-max: 0 0 0;
    --clr-white: 255 255 255;
    --clr-black: 0 0 0;
    --clr-gray: 128 128 128;
    --clr-point: 220 186 245;
    --clr-theme: var(--clr-if-0);
    --clr-background: var(--clr-surface-0);
    --clr-tint-0: 126 183 255;
    --clr-tint-20: 98 149 225;
    --clr-tint-40: 79 127 205;
    --clr-tint-60: 60 104 185;
    --clr-tint-80: 41 81 165;
    --clr-tint-100: 12 47 135;
    --clr-surface-0: 255 252 249;
    --clr-surface-20: 255 245 228;
    --clr-surface-40: 255 241 214;
    --clr-surface-60: 255 237 200;
    --clr-surface-80: 255 233 186;
    --clr-surface-100: 255 228 172;
    --clr-if-0: 253 227 108;
    --clr-if-20: 254 214 81;
    --clr-if-40: 254 205 63;
    --clr-if-60: 255 196 45;
    --clr-if-80: 255 188 27;
    --clr-if-100: 155 174 0;
    --clr-text: 48 40 37;
    --clr-text-highlight: var(--clr-theme);
    --clr-text-on-tint: var(--clr-white);
    --clr-text-on-interface: var(--clr-text);
    --clr-text-disable: var(--clr-gray);
    --on-low-contrast: ;
    --clr-clear: 35 206 107;
    --clr-info: 89 96 232;
    --clr-warn: 247 179 43;
    --clr-alert: 190 30 20;
    --clr-unable: ;
    --clr-normal: ;
  }
}
:root.light {
  --clr-min: 255 255 255;
  --clr-max: 0 0 0;
  --clr-white: 255 255 255;
  --clr-black: 0 0 0;
  --clr-gray: 128 128 128;
  --clr-point: 220 186 245;
  --clr-theme: var(--clr-if-0);
  --clr-background: var(--clr-surface-0);
  --clr-tint-0: 126 183 255;
  --clr-tint-20: 98 149 225;
  --clr-tint-40: 79 127 205;
  --clr-tint-60: 60 104 185;
  --clr-tint-80: 41 81 165;
  --clr-tint-100: 12 47 135;
  --clr-surface-0: 255 252 249;
  --clr-surface-20: 255 245 228;
  --clr-surface-40: 255 241 214;
  --clr-surface-60: 255 237 200;
  --clr-surface-80: 255 233 186;
  --clr-surface-100: 255 228 172;
  --clr-if-0: 253 227 108;
  --clr-if-20: 254 214 81;
  --clr-if-40: 254 205 63;
  --clr-if-60: 255 196 45;
  --clr-if-80: 255 188 27;
  --clr-if-100: 155 174 0;
  --clr-text: 48 40 37;
  --clr-text-highlight: var(--clr-theme);
  --clr-text-on-tint: var(--clr-white);
  --clr-text-on-interface: var(--clr-text);
  --clr-text-disable: var(--clr-gray);
  --on-low-contrast: ;
  --clr-clear: 35 206 107;
  --clr-info: 89 96 232;
  --clr-warn: 247 179 43;
  --clr-alert: 190 30 20;
  --clr-unable: ;
  --clr-normal: ;
}

/* _light.scss */
/* _dark.scss */
@media (prefers-color-scheme: dark) {
  :root {
    --clr-min: 0 0 0;
    --clr-max: 255 255 255;
    --clr-theme: var(--clr-tint-80);
    --clr-background: var(--clr-surface-0);
    --clr-tint-0: 100 242 180;
    --clr-tint-20: 123 244 188;
    --clr-tint-40: 143 246 196;
    --clr-tint-60: 161 248 205;
    --clr-tint-80: 178 249 213;
    --clr-tint-100: 195 251 221;
    --clr-surface-0: 15 15 15;
    --clr-surface-20: 38 38 38;
    --clr-surface-40: 61 61 61;
    --clr-surface-60: 85 85 85;
    --clr-surface-80: 111 111 111;
    --clr-surface-100: 138 138 138;
    --clr-if-0: 26 35 30;
    --clr-if-20: 47 56 51;
    --clr-if-40: 70 77 73;
    --clr-if-60: 93 100 96;
    --clr-if-80: 118 124 121;
    --clr-if-100: 144 149 146;
    --clr-text: 255 255 255;
    --clr-text-highlight: var(--clr-theme);
    --clr-text-on-tint: var(--clr-if-0);
    --clr-text-on-surface: 255 255 255;
    --clr-text-on-invert: var(--clr-if-0);
    --clr-text-disabled: ;
    --clr-alert: 227 23 10;
    --clr-warn: 247 179 43;
    --clr-info: 89 96 232;
    --clr-clear: 35 206 107;
    --clr-unable: ;
  }
}
:root.dark {
  --clr-min: 0 0 0;
  --clr-max: 255 255 255;
  --clr-theme: var(--clr-tint-80);
  --clr-background: var(--clr-surface-0);
  --clr-tint-0: 100 242 180;
  --clr-tint-20: 123 244 188;
  --clr-tint-40: 143 246 196;
  --clr-tint-60: 161 248 205;
  --clr-tint-80: 178 249 213;
  --clr-tint-100: 195 251 221;
  --clr-surface-0: 15 15 15;
  --clr-surface-20: 38 38 38;
  --clr-surface-40: 61 61 61;
  --clr-surface-60: 85 85 85;
  --clr-surface-80: 111 111 111;
  --clr-surface-100: 138 138 138;
  --clr-if-0: 26 35 30;
  --clr-if-20: 47 56 51;
  --clr-if-40: 70 77 73;
  --clr-if-60: 93 100 96;
  --clr-if-80: 118 124 121;
  --clr-if-100: 144 149 146;
  --clr-text: 255 255 255;
  --clr-text-highlight: var(--clr-theme);
  --clr-text-on-tint: var(--clr-if-0);
  --clr-text-on-surface: 255 255 255;
  --clr-text-on-invert: var(--clr-if-0);
  --clr-text-disabled: ;
  --clr-alert: 227 23 10;
  --clr-warn: 247 179 43;
  --clr-info: 89 96 232;
  --clr-clear: 35 206 107;
  --clr-unable: ;
}

/* _dark.scss */
/* _defaultColor.scss */
:root {
  --clr-min: 255 255 255;
  --clr-max: 0 0 0;
  --clr-white: 255 255 255;
  --clr-black: 0 0 0;
  --clr-gray: 128 128 128;
  --clr-point: 220 186 245;
  --clr-notify: 246 74 0;
  --clr-theme: var(--clr-if-0);
  --clr-background: var(--clr-surface-0);
  --clr-tint-0: 126 183 255;
  --clr-tint-20: 98 149 225;
  --clr-tint-40: 79 127 205;
  --clr-tint-60: 60 104 185;
  --clr-tint-80: 41 81 165;
  --clr-tint-100: 12 47 135;
  --clr-surface-0: 255 252 249;
  --clr-surface-20: 255 245 228;
  --clr-surface-40: 255 241 214;
  --clr-surface-60: 255 237 200;
  --clr-surface-80: 255 233 186;
  --clr-surface-100: 255 228 172;
  --clr-if-0: 253 227 108;
  --clr-if-20: 254 214 81;
  --clr-if-40: 254 205 63;
  --clr-if-60: 255 196 45;
  --clr-if-80: 255 188 27;
  --clr-if-100: 255 174 0;
  --clr-text: 48 40 37;
  --clr-text-highlight: var(--clr-theme);
  --clr-text-on-tint: var(--clr-white);
  --clr-text-on-interface: var(--clr-text);
  --clr-text-disable: var(--clr-gray);
  --on-low-contrast: ;
  --clr-clear: 35 206 107;
  --clr-info: 89 96 232;
  --clr-warn: 247 179 43;
  --clr-alert: 190 30 20;
  --clr-unable: ;
  --clr-normal: ;
}

/* _defaultColor.scss */
/* _commons.scss */
#root {
  container-name: main-container;
  container-type: inline-size;
  position: relative;
}

#contentView {
  flex: 1;
  min-height: 100vh;
  width: 100%;
  overflow: hidden;
}

.inner-wrapper {
  margin-inline: auto;
  width: min(100% - 1.6rem, 60rem);
}

:where(#logoMain, #logoFooter) {
  position: relative;
  overflow: hidden;
}

.hidden-alt {
  position: absolute;
  inset-block-start: -5000rem;
  opacity: 0;
  pointer-events: none;
}

.remix {
  width: var(--icon-size, 0.8rem);
  aspect-ratio: 1/1;
  fill: currentColor;
}

/* 반응형 쿼리 */
@container main-container (max-width: 960px) {}
@container main-container (max-width: 640px) {}
/* _commons.scss */
/* _headers.scss */
#head-primary {
  container-name: head-primary;
  container-type: inline-size;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  gap: 1.8rem;
  position: sticky;
  inset-block-start: 0;
  padding-inline: 0.8rem;
  height: 3.2rem;
  background-color: rgb(var(--clr-theme));
  outline: 1px solid rgb(var(--clr-text)/0.15);
  z-index: 50000;
}

#nav-primary {
  display: flex;
  align-items: center;
  height: 100%;
}
#nav-primary > ul {
  display: contents;
}

.nav-item {
  --gradient-height: 0;
  display: grid;
  place-items: center;
  padding-inline: 0.8rem;
  height: 100%;
  background-image: linear-gradient(to top, rgb(var(--clr-if-100)) var(--gradient-height), transparent var(--gradient-height));
  font-weight: 200;
}
.nav-item.on {
  --gradient-height: 0.2rem;
  font-weight: 900;
}

#head-controls {
  display: flex;
  align-items: center;
  gap: 0.8rem;
  margin-inline-start: auto;
}

#total-search {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-inline: 0.8rem;
  width: 10rem;
  height: 1.6rem;
  border-radius: var(--rad-full);
  background-color: rgb(var(--clr-white));
  outline: 1px solid rgb(var(--clr-if-20));
  font-size: var(--fnt-sm);
  font-weight: 200;
}

#button-notify {
  display: grid;
  place-items: center;
  position: relative;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: var(--rad-full);
  scale: 0.75;
  opacity: 0.25;
  transition: 0.15s;
}
#button-notify.on {
  opacity: 1;
}
#button-notify.on:hover {
  background-color: rgb(var(--clr-if-60));
}
#button-notify.on:focus {
  background-color: rgb(var(--clr-white));
  color: rgb(var(--clr-if-100));
}
#button-notify.on::after {
  display: block;
  position: absolute;
  inset: 0;
  margin-inline-start: auto;
  margin-block-end: auto;
  width: 0.4rem;
  height: 0.4rem;
  border-radius: 25rem;
  background-color: rgb(var(--clr-notify));
  content: "";
}

#button-user-profile {
  position: relative;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: var(--rad-full);
  background-color: rgb(var(--clr-gray));
  outline: 1px solid rgb(var(--clr-text)/0.15);
  color: rgb(var(--clr-white)/0.5);
  overflow: clip;
}
#button-user-profile > .remix {
  position: absolute;
  inset: 0;
  margin: 0.4rem auto auto;
}

.current-user-image {
  position: absolute;
  inset: 0;
  margin: auto;
}

#button-burger {
  display: flex;
  position: relative;
  width: 2rem;
  height: 2rem;
  border: 1px solid rgb(var(--clr-max)/0.25);
  border-radius: var(--rad-full);
  background-color: rgb(var(--clr-background));
}
#button-burger > span {
  display: block;
  position: absolute;
  inset: 0;
  margin: auto;
  width: 0.1rem;
  background-color: rgb(var(--clr-text));
}
#button-burger > span:nth-child(1) {
  inset-inline-start: 0.5rem;
  height: 0.6rem;
}
#button-burger > span:nth-child(2) {
  height: 0.6rem;
}
#button-burger > span:nth-child(3) {
  inset-inline-end: 0.5rem;
  height: 0.6rem;
}
#button-burger:hover {
  background-color: rgb(var(--clr-if-40));
}
#button-burger.on {
  border-color: transparent;
  background-color: rgb(var(--clr-if-100));
  transition: 0.5s;
}
#button-burger.on > span {
  background-color: rgb(255, 255, 255);
}
#button-burger.on > span:nth-child(1) {
  --burger-self-start: 0.4rem;
  --burger-self-rotate: 45deg;
  animation: burger-toggle 0.5s 1 forwards;
}
#button-burger.on > span:nth-child(2) {
  height: 0;
  transition: height 0.25s 0.25s;
}
#button-burger.on > span:nth-child(3) {
  --burger-self-end: 0.4rem;
  --burger-self-rotate: -45deg;
  animation: burger-toggle 0.5s 1 forwards;
}

/* 반응형 쿼리 */
@container head-primary (max-width: 960px) {}
@container head-primary (max-width: 640px) {}
/* _headers.scss */
/* _footers.scss */
/* _footers.scss */
/* _mainPage.scss */
/* 반응형 쿼리 */
@container main-container (max-width: 960px) {}
@container main-container (max-width: 640px) {}
/* _mainPage.scss */
/* _registerPage.scss */
/* _registerPage.scss */
/* _loginPage.scss */
/* _loginPage.scss */
/* _myPage.scss */
/* _myPage.scss */
/* _buttons.scss */
button {
  padding: 0;
  border: 0;
  background-color: transparent;
  outline: 0;
  color: inherit;
  cursor: pointer;
}

.buttons {
  --button-surface-color: var(--clr-theme);
  --button-outline-color: 0 0 0 / 0;
  --button-text-color: var(--clr-text-on-tint);
  --button-hover-color: var(--clr-tint-20);
  display: flex;
  align-items: center;
  gap: 0.4rem;
  height: 1.6rem;
  padding-inline: 0.8rem;
  border: 1px solid rgb(var(--button-outline-color));
  border-radius: 0.2rem;
  background-color: rgb(var(--button-surface-color));
  outline-offset: 0.1rem;
  color: rgb(var(--button-text-color));
  font-size: var(--fnt-sm);
  font-weight: 700;
  transition: background-color 0.25s;
}
.buttons:hover {
  background-color: rgb(var(--button-hover-color));
}
.buttons:active {
  background-color: rgb(var(--clr-if-60));
  outline-offset: 0.2rem;
}
.buttons:focus {
  outline: 0.1rem dashed rgb(var(--clr-if-100)/0.5);
}
.buttons:disabled {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgb(var(--clr-white)/0.25);
  cursor: no-drop;
}
.buttons > span {
  order: 1;
}
.buttons.front > .remix {
  order: 0;
}
.buttons.back > .remix {
  order: 2;
}
.buttons.only {
  justify-content: center;
  padding-inline: 0;
  width: 1.6rem;
}
.buttons.only > span {
  display: none;
}

.button-post-controls {
  --button-icon-color: currentColor;
  position: relative;
  width: 3.6rem;
  height: 3.6rem;
  border-radius: 0.4rem;
  font-size: var(--fnt-sm);
  overflow: hidden;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.button-post-controls > .remix {
  position: absolute;
  inset-block: 0;
  inset-inline: 0;
  margin-block: auto;
  margin-inline: auto;
  width: 0.8rem;
  transition: 0.25s;
}
.button-post-controls > span {
  display: block;
  position: absolute;
  inset-block-start: calc(100% + 1.6rem);
  inset-inline: 0;
  margin: auto;
  opacity: 0;
  transition: 0.25s;
}
.button-post-controls:hover, .button-post-controls:focus {
  background-image: radial-gradient(circle at top, rgb(var(--button-icon-color)/0.1), rgb(var(--clr-surface-0)));
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  box-shadow: 0 0 0.8rem -0.2rem rgb(var(--button-icon-color)/0.25);
  outline: 1px solid rgb(var(--button-icon-color)/0.25);
  outline-offset: 1px;
  text-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.5);
}
.button-post-controls:hover > .remix, .button-post-controls:focus > .remix {
  inset-block: 0 1.2rem;
  color: rgb(var(--button-icon-color));
}
.button-post-controls:hover > span, .button-post-controls:focus > span {
  inset-block-start: calc(50% + 0.2rem);
  opacity: 1;
}

#btnSubmitReply,
#btnSubmitGuestbook,
.button-guestbook-reply {
  flex-shrink: 0;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 0.2rem;
  width: 4.2rem;
  border: 1px solid rgb(var(--clr-tint-60)/0.5);
  border-radius: 0.2rem;
  background-color: rgb(var(--clr-theme)/0.1);
  color: rgb(var(--clr-tint-60));
  font-weight: 700;
}
#btnSubmitReply:hover,
#btnSubmitGuestbook:hover,
.button-guestbook-reply:hover {
  background-color: rgb(var(--clr-tint-60));
  color: rgb(var(--clr-if-0));
}
#btnSubmitReply:active,
#btnSubmitGuestbook:active,
.button-guestbook-reply:active {
  background-color: rgb(var(--clr-tint-0));
}
#btnSubmitReply:focus,
#btnSubmitGuestbook:focus,
.button-guestbook-reply:focus {
  border-color: rgb(var(--clr-tint-100));
}
#btnSubmitReply:disabled,
#btnSubmitGuestbook:disabled,
.button-guestbook-reply:disabled {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}

.buttons-blog-control {
  flex: 1;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 0.2rem;
  width: 100%;
  aspect-ratio: 1/1;
  border: 1px solid transparent;
  border-radius: 0.4rem;
  transition: background-color 0.15s;
}
.buttons-blog-control > .remix {
  width: 1rem;
}
.buttons-blog-control > span {
  font-size: var(--fnt-sm);
}
.buttons-blog-control:hover, .buttons-blog-control:focus {
  background-color: rgb(var(--clr-theme));
  color: rgb(var(--clr-text-on-tint));
}

.button-guestbook-controls,
.button-reply-controls {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  font-size: var(--fnt-sm);
}
.button-guestbook-controls > .remix,
.button-reply-controls > .remix {
  width: 0.7rem;
  opacity: 0.5;
}
.button-guestbook-controls:hover,
.button-reply-controls:hover {
  -webkit-text-decoration: 1px solid underline;
          text-decoration: 1px solid underline;
  text-underline-offset: 0.2rem;
}

/* _buttons.scss */
/* _formElements.scss */
input,
select,
button {
  padding: 0;
  border: 0;
  outline: 0;
}

input:not(.exclude)[type=text], input:not(.exclude)[type=number], input:not(.exclude)[type=email], input:not(.exclude)[type=tel], input:not(.exclude)[type=email], input:not(.exclude)[type=url], input:not(.exclude)[type=password], input:not(.exclude)[type=datetime-local], input:not(.exclude)[type=date], input:not(.exclude)[type=month], input:not(.exclude)[type=week], input:not(.exclude)[type=time], input:not(.exclude)[type=search] {
  padding-inline: 0.4rem;
  height: 1.6rem;
  border: 1px solid rgb(var(--clr-theme)/0.25);
  border-radius: 0.2rem;
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  color: rgb(var(--clr-text));
  transition: 0.25s;
}
input:not(.exclude)[type=text]:hover, input:not(.exclude)[type=number]:hover, input:not(.exclude)[type=email]:hover, input:not(.exclude)[type=tel]:hover, input:not(.exclude)[type=email]:hover, input:not(.exclude)[type=url]:hover, input:not(.exclude)[type=password]:hover, input:not(.exclude)[type=datetime-local]:hover, input:not(.exclude)[type=date]:hover, input:not(.exclude)[type=month]:hover, input:not(.exclude)[type=week]:hover, input:not(.exclude)[type=time]:hover, input:not(.exclude)[type=search]:hover {
  border-color: rgb(var(--clr-theme)/0.6);
  background-color: rgb(var(--clr-min)/0.5);
}
input:not(.exclude)[type=text]:focus, input:not(.exclude)[type=number]:focus, input:not(.exclude)[type=email]:focus, input:not(.exclude)[type=tel]:focus, input:not(.exclude)[type=email]:focus, input:not(.exclude)[type=url]:focus, input:not(.exclude)[type=password]:focus, input:not(.exclude)[type=datetime-local]:focus, input:not(.exclude)[type=date]:focus, input:not(.exclude)[type=month]:focus, input:not(.exclude)[type=week]:focus, input:not(.exclude)[type=time]:focus, input:not(.exclude)[type=search]:focus {
  border-color: rgb(var(--clr-theme)/0.75);
  background-color: rgb(var(--clr-min));
  outline: 0.2rem solid rgb(var(--clr-tint-0)/0.25);
}
input:not(.exclude)[type=text].need-recognize:valid, input:not(.exclude)[type=number].need-recognize:valid, input:not(.exclude)[type=email].need-recognize:valid, input:not(.exclude)[type=tel].need-recognize:valid, input:not(.exclude)[type=email].need-recognize:valid, input:not(.exclude)[type=url].need-recognize:valid, input:not(.exclude)[type=password].need-recognize:valid, input:not(.exclude)[type=datetime-local].need-recognize:valid, input:not(.exclude)[type=date].need-recognize:valid, input:not(.exclude)[type=month].need-recognize:valid, input:not(.exclude)[type=week].need-recognize:valid, input:not(.exclude)[type=time].need-recognize:valid, input:not(.exclude)[type=search].need-recognize:valid {
  border-color: rgb(var(--clr-clear)/0.75);
  background-color: rgb(var(--clr-clear)/0.5);
}
input:not(.exclude)[type=text]:invalid, input:not(.exclude)[type=number]:invalid, input:not(.exclude)[type=email]:invalid, input:not(.exclude)[type=tel]:invalid, input:not(.exclude)[type=email]:invalid, input:not(.exclude)[type=url]:invalid, input:not(.exclude)[type=password]:invalid, input:not(.exclude)[type=datetime-local]:invalid, input:not(.exclude)[type=date]:invalid, input:not(.exclude)[type=month]:invalid, input:not(.exclude)[type=week]:invalid, input:not(.exclude)[type=time]:invalid, input:not(.exclude)[type=search]:invalid {
  border-color: rgb(var(--clr-alert));
  outline: 0.2rem solid rgb(var(--clr-alert)/0.25);
}
input:not(.exclude)[type=text]:disabled, input:not(.exclude)[type=number]:disabled, input:not(.exclude)[type=email]:disabled, input:not(.exclude)[type=tel]:disabled, input:not(.exclude)[type=email]:disabled, input:not(.exclude)[type=url]:disabled, input:not(.exclude)[type=password]:disabled, input:not(.exclude)[type=datetime-local]:disabled, input:not(.exclude)[type=date]:disabled, input:not(.exclude)[type=month]:disabled, input:not(.exclude)[type=week]:disabled, input:not(.exclude)[type=time]:disabled, input:not(.exclude)[type=search]:disabled {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}

textarea:not(.exclude) {
  padding-inline: 0.4rem;
  height: 1.6rem;
  border: 1px solid rgb(var(--clr-theme)/0.25);
  border-radius: 0.2rem;
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  color: rgb(var(--clr-text));
  transition: 0.25s;
  padding-block: 0.4rem;
}
textarea:not(.exclude):hover {
  border-color: rgb(var(--clr-theme)/0.6);
  background-color: rgb(var(--clr-min)/0.5);
}
textarea:not(.exclude):focus {
  border-color: rgb(var(--clr-theme)/0.75);
  background-color: rgb(var(--clr-min));
  outline: 0.2rem solid rgb(var(--clr-tint-0)/0.25);
}
textarea:not(.exclude).need-recognize:valid {
  border-color: rgb(var(--clr-clear)/0.75);
  background-color: rgb(var(--clr-clear)/0.5);
}
textarea:not(.exclude):invalid {
  border-color: rgb(var(--clr-alert));
  outline: 0.2rem solid rgb(var(--clr-alert)/0.25);
}
textarea:not(.exclude):disabled {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}

select:not(.exclude) {
  padding-inline: 0.4rem;
  height: 1.6rem;
  border: 1px solid rgb(var(--clr-theme)/0.25);
  border-radius: 0.2rem;
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  color: rgb(var(--clr-text));
  transition: 0.25s;
  padding-inline-end: 1.6rem;
  min-width: 3.6rem;
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="gray"%3E%3Cpath d="M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z"%3E%3C/path%3E%3C/svg%3E');
  background-repeat: no-repeat;
  background-position: right 0.2rem center;
  background-size: 24px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
select:not(.exclude):hover {
  border-color: rgb(var(--clr-theme)/0.6);
  background-color: rgb(var(--clr-min)/0.5);
}
select:not(.exclude):focus {
  border-color: rgb(var(--clr-theme)/0.75);
  background-color: rgb(var(--clr-min));
  outline: 0.2rem solid rgb(var(--clr-tint-0)/0.25);
}
select:not(.exclude).need-recognize:valid {
  border-color: rgb(var(--clr-clear)/0.75);
  background-color: rgb(var(--clr-clear)/0.5);
}
select:not(.exclude):invalid {
  border-color: rgb(var(--clr-alert));
  outline: 0.2rem solid rgb(var(--clr-alert)/0.25);
}
select:not(.exclude):disabled {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}
select:not(.exclude):focus {
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="gray"%3E%3Cpath d="M12 11.8284L9.17154 14.6569L7.75732 13.2426L12 9L16.2426 13.2426L14.8284 14.6569L12 11.8284Z"%3E%3C/path%3E%3C/svg%3E');
}

input[type=radio] {
  /*
      <input type="radio" name="radio-something" id="rdoSomething">

      <label for="rdoSomething">
          <div class="toggles-indicator"></div>

          <span class="toggles-label">라디오 버튼 라벨</span>
      </label>
  */
  display: none;
}
input[type=radio] + label {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  position: relative;
  cursor: pointer;
}
input[type=radio] + label > .toggles-indicator {
  display: grid;
  place-items: center;
  width: 1rem;
  height: 1rem;
  border: 1px solid rgb(var(--clr-theme)/0.25);
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  color: rgb(var(--clr-text));
}
input[type=radio] + label > .toggles-label {
  font-weight: 200;
  opacity: 0.75;
}
input[type=radio]:checked + label > .toggles-indicator {
  border: 1px solid rgb(var(--clr-theme));
  background-color: rgb(var(--clr-tint-0)/0.15);
  color: rgb(var(--clr-tint-100));
}
input[type=radio]:checked + label > .toggles-label {
  font-weight: 900;
}
input[type=radio] + label:hover > .toggles-indicator {
  border-color: rgb(var(--clr-theme)/0.6);
  background-color: rgb(var(--clr-min)/0.5);
}
input[type=radio]:focus + label > .toggles-indicator {
  border-color: rgb(var(--clr-theme)/0.75);
  background-color: rgb(var(--clr-min));
  outline: 0.2rem solid rgb(var(--clr-tint-0)/0.25);
}
input[type=radio]:disabled + label {
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}
input[type=radio]:disabled + label > .toggles-indicator {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
}
input[type=radio] + label > .toggles-indicator {
  border-radius: 25rem;
}
input[type=radio] + label > .toggles-indicator::before {
  display: block;
  width: 0.4rem;
  height: 0.4rem;
  border-radius: 25rem;
  background-color: rgb(var(--clr-theme));
  opacity: 0;
  content: "";
}
input[type=radio]:checked + label > .toggles-indicator::before {
  opacity: 1;
}

input[type=checkbox]:not([data-checkbox-type=toggle]) {
  /*
      <input type="checkbox" name="check-something" id="chkSomething">

      <label for="chkSomething">
          <div class="toggles-indicator">
              <svg class="remix">
                  <use xlink:href="/miscs/remixicon.symbol.svg#ri-check-line"></use>
              </svg>
          </div>

          <span class="toggles-label">체크박스 라벨</span>
      </label>
  */
  display: none;
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  position: relative;
  cursor: pointer;
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label > .toggles-indicator {
  display: grid;
  place-items: center;
  width: 1rem;
  height: 1rem;
  border: 1px solid rgb(var(--clr-theme)/0.25);
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
  color: rgb(var(--clr-text));
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label > .toggles-label {
  font-weight: 200;
  opacity: 0.75;
}
input[type=checkbox]:not([data-checkbox-type=toggle]):checked + label > .toggles-indicator {
  border: 1px solid rgb(var(--clr-theme));
  background-color: rgb(var(--clr-tint-0)/0.15);
  color: rgb(var(--clr-tint-100));
}
input[type=checkbox]:not([data-checkbox-type=toggle]):checked + label > .toggles-label {
  font-weight: 900;
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label:hover > .toggles-indicator {
  border-color: rgb(var(--clr-theme)/0.6);
  background-color: rgb(var(--clr-min)/0.5);
}
input[type=checkbox]:not([data-checkbox-type=toggle]):focus + label > .toggles-indicator {
  border-color: rgb(var(--clr-theme)/0.75);
  background-color: rgb(var(--clr-min));
  outline: 0.2rem solid rgb(var(--clr-tint-0)/0.25);
}
input[type=checkbox]:not([data-checkbox-type=toggle]):disabled + label {
  color: rgb(var(--clr-surface-60));
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.25);
  cursor: no-drop;
}
input[type=checkbox]:not([data-checkbox-type=toggle]):disabled + label > .toggles-indicator {
  border-color: rgb(var(--clr-surface-60));
  background-color: rgb(var(--clr-surface-0));
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label > .toggles-indicator {
  border-radius: 0.2rem;
}
input[type=checkbox]:not([data-checkbox-type=toggle]) + label > .toggles-indicator .remix {
  width: 0.8rem;
  height: 0.8rem;
  opacity: 0;
}
input[type=checkbox]:not([data-checkbox-type=toggle]):checked + label > .toggles-indicator .remix {
  opacity: 1;
}

input[type=checkbox]:is([data-checkbox-type=toggle]) {
  /*
      <input type="checkbox" name="check-color-theme" id="chkTheme" data-checkbox-type="toggle" data-switch-label="false" :checked="currentThemeSetting" @change="setLocalTheme">

      <label for="chkTheme">
          <div class="switch-rail">
              <div class="switch-button">
                  <div class="switch-icon-container">
                      <div class="switch-false">
                          <svg class="remix">
                              <use xlink:href="/miscs/remixicon.symbol.svg#ri-sun-fill"></use>
                          </svg>
                      </div>

                      <div class="switch-true">
                          <svg class="remix">
                              <use xlink:href="/miscs/remixicon.symbol.svg#ri-moon-clear-fill"></use>
                          </svg>
                      </div>
                  </div>
              </div>
          </div>

          <span class="switch-label">색상 테마 설정</span>
      </label>
  */
  display: none;
}
input[type=checkbox]:is([data-checkbox-type=toggle]):is([data-switch-label=false]) + label .switch-label {
  display: none;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label {
  --switch-rail-false: 184 238 255;
  --switch-rail-true: 59 38 136;
  --switch-button-false: 255 251 0;
  --switch-button-true: 25 22 27;
  --switch-icon-false: 255 102 0;
  --switch-icon-true: 255 251 0;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  cursor: pointer;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-rail {
  position: relative;
  width: 2.4rem;
  height: 1.2rem;
  border-radius: 25rem;
  background-color: rgb(var(--switch-rail-false));
  box-shadow: inset 1px 1px 0.1rem 0 rgba(0, 0, 0, 0.25);
  outline: 1px solid rgba(255, 255, 255, 0.25);
  transition: background-color 0.5s;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-button {
  position: absolute;
  inset: 0;
  margin-block: 0.1rem;
  margin-inline: 0.1rem;
  width: 1rem;
  height: 1rem;
  border-radius: 25rem;
  background-color: rgb(var(--switch-button-false));
  color: rgb(var(--switch-icon-false));
  transition: translate 0.25s, background-color 0.5s, color 0.25s;
  overflow: hidden;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-icon-container {
  position: absolute;
  inset: 0;
  width: 1rem;
  height: 2rem;
  transition: translate 0.5s 0.25s;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-true,
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-false {
  display: grid;
  place-items: center;
  width: 1rem;
  height: 1rem;
}
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-true > .remix,
input[type=checkbox]:is([data-checkbox-type=toggle]) + label .switch-false > .remix {
  width: 0.6rem;
}
input[type=checkbox]:is([data-checkbox-type=toggle]):checked + label .switch-rail {
  background-color: rgb(var(--switch-rail-true));
}
input[type=checkbox]:is([data-checkbox-type=toggle]):checked + label .switch-button {
  translate: 1.2rem 0 0;
  background-color: rgb(var(--switch-button-true));
  color: rgb(var(--switch-icon-true));
}
input[type=checkbox]:is([data-checkbox-type=toggle]):checked + label .switch-icon-container {
  translate: 0 -1rem 0;
}
input[type=checkbox]:is([data-checkbox-type=toggle]):focus + label .switch-rail {
  outline: 0.1rem dashed rgb(var(--clr-theme));
  outline-offset: 0.1rem;
}

/* _formElements.scss */
/* _spinLoader.scss */
#spinLoader {
  position: fixed;
  inset: 0;
  margin: auto;
  padding: 1px;
  width: 6.4rem;
  height: 6.4rem;
  border-radius: 25rem;
  background-image: repeating-conic-gradient(from var(--conic-range), rgb(var(--clr-if-0)), rgb(var(--clr-tint-100)) 50%);
  box-shadow: 0 0 1.2rem -0.4rem rgb(var(--clr-tint-80)/1);
  animation: rotate-conic 1s linear infinite;
  mix-blend-mode: screen;
}
#spinLoader > div {
  display: grid;
  place-items: center;
  width: 100%;
  height: 100%;
  border-radius: 25rem;
  background-color: rgb(0, 0, 0);
  color: rgb(128, 128, 128);
  font-weight: 900;
}

.dark #spinloader {
  mix-blend-mode: screen;
}

.light #spinloader {
  mix-blend-mode: overlay;
}

/* _spinLoader.scss */
/* _customAlert.scss */
.modal-main {
  --modal-urgent-color: var(--clr-if-60);
  position: fixed;
  inset: 0;
  margin: auto;
  width: min(100% - 1.6rem, 24rem);
  height: -moz-fit-content;
  height: fit-content;
  border: 1px solid rgb(var(--modal-urgent-color)/0.75);
  border-radius: 0.4rem;
  background-color: rgb(var(--clr-background));
  outline: 0.1rem solid rgb(var(--modal-urgent-color)/0.5);
  box-shadow: 0 1.2rem 2.4rem -0.8rem rgba(0, 0, 0, 0.5);
  overflow: hidden;
}
.modal-main.good {
  --modal-urgent-color: var(--clr-clear);
}
.modal-main.low {
  --modal-urgent-color: var(--clr-clear);
}
.modal-main.medium {
  --modal-urgent-color: var(--clr-warn);
}
.modal-main.high {
  --modal-urgent-color: var(--clr-alert);
}

.vfm {
  z-index: 50001;
}

.modal-overlay {
  width: 100%;
  height: 100%;
  background-color: rgb(var(--clr-min)/0.25);
  -webkit-backdrop-filter: blur(0.4rem);
          backdrop-filter: blur(0.4rem);
}

.modal-title-bar {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  padding: 0.8rem;
  font-size: var(--fnt-sm);
  text-transform: capitalize;
}
.modal-title-bar > span {
  font-weight: 900;
  opacity: 0.5;
}

.modal-message-container {
  display: flex;
  gap: 1.2rem;
  padding: 1.2rem 1.8rem;
  border-block: 1px solid rgb(var(--clr-max)/0.15);
}

.modal-message-icon {
  flex-shrink: 0;
  color: rgb(var(--modal-urgent-color)/0.75);
}
.modal-message-icon > .remix {
  width: 2.4rem;
}

.modal-message-text {
  display: flex;
  align-items: center;
  min-height: 2.4rem;
  font-size: var(--fnt-lg);
  line-height: 1.4;
}

.modal-controls {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.4rem;
  padding: 0.8rem;
}

/* _customAlert.scss */
/* _userProfileCard.scss */
#user-profile-card {
  position: fixed;
  inset-block-start: 4rem;
  inset-inline-end: 0.8rem;
  margin: auto;
  width: 16rem;
  height: -moz-fit-content;
  height: fit-content;
  border-radius: var(--rad-lg);
  background-color: rgb(var(--clr-white));
  box-shadow: var(--shd-100);
  overflow: clip;
}

.profile-card-title-bar {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  padding-inline: 0.8rem;
  height: 2rem;
  font-size: var(--fnt-sm);
}

.profile-card-body {
  border-block: 1px solid rgb(var(--clr-text)/0.15);
}

.profile-card-controls {
  display: flex;
  height: 2.4rem;
}

.profile-card-buttons {
  display: flex;
  align-items: center;
  flex: 1;
  padding-inline: 0.8rem;
  font-size: var(--fnt-sm);
}
.profile-card-buttons > span {
  margin-inline: auto;
}
.profile-card-buttons:hover {
  background-color: rgb(var(--clr-if-60));
}

#button-show-profile {
  background-color: rgb(var(--clr-theme));
}

/* _userProfileCard.scss */
/* _mallangsItem.scss */
.mallang-item {
  display: flex;
  align-items: center;
  gap: 0.6rem;
  padding: 0.8rem;
}

.mallang-image-container {
  flex-shrink: 0;
  position: relative;
  width: 3.2rem;
  height: 3.2rem;
  border: 1px solid rgb(var(--clr-black)/0.15);
  border-radius: var(--rad-full);
  background-color: rgb(var(--clr-point));
  color: rgb(var(--clr-white));
  overflow: clip;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  pointer-events: none;
}
.mallang-image-container > .mallang-image {
  position: absolute;
  inset: 0;
  margin: auto;
  width: 2rem;
  rotate: -15deg;
}

.mallang-descriptions {
  width: 100%;
}
.mallang-descriptions > dt {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  margin-block-end: 0.2rem;
  width: 100%;
}
.mallang-descriptions > dt > .mallang-main-indicator {
  flex-shrink: 0;
  padding: 0.2rem 0.4rem;
  border-radius: var(--rad-full);
  background-color: rgb(var(--clr-point));
  font-size: var(--fnt-xs);
  font-weight: 700;
}
.mallang-descriptions > dt > .mallang-name {
  font-weight: 900;
  word-break: break-all;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.mallang-descriptions > dd {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  color: rgb(var(--clr-text)/0.5);
  font-size: var(--fnt-sm);
}

/* _mallangsItem.scss */